{"version":3,"sources":["model/Report.ts","components/NodeSummary.tsx","components/NodeReport.tsx","App.tsx","index.tsx"],"names":["getReportFromFolder","report","folders","length","every","folder","currentFolder","otherFolders","type","undefined","children","NodeSummaryContainer","styled","div","NodeSummary","percentFormatter","Intl","NumberFormat","style","minimumFractionDigits","format","metrics","typescript","javascript","requireInTypescript","defineInJavascript","reactClassComponent","bemInTypescript","reactController","backboneController","copyToClipboard","text","navigator","clipboard","writeText","ColoredCell","Table","Cell","color","level","gradient","getColorForLevel","SpacedCell","Spacer","NodeReport","url","useRouteMatch","split","slice","currentNode","Step","href","map","name","substring","indexOf","Header","sticky","HeaderCell","Body","Object","values","child","ratio","childUrl","Row","size","to","ghost","icon","title","onClick","path","require","App","exact","GlobalStyle","createGlobalStyle","CommonStyle","ReactDOM","render","StrictMode","theme","onboarderTheme","document","getElementById"],"mappings":"6pjoEA2BMA,EAAsB,SAAtBA,EAAuBC,EAAgBC,GAC3C,GAAI,IAAMA,EAAQC,QAAUD,EAAQE,OAAM,SAACC,GAAD,MAAuB,KAAXA,KACpD,OAAOJ,EAFgE,kBAKhCC,GAAlCI,EALkE,KAKhDC,EALgD,WAMzE,MAAI,SAAWN,EAAOO,WAAQC,IAAcH,EACnCL,EAGFD,EAAoBC,EAAOS,SAASJ,GAAgBC,I,OCjCvDI,EAAuBC,UAAOC,IAAV,oGAUpBC,EAAc,SAAC,GAAgC,IAA/Bb,EAA8B,EAA9BA,OACdc,EAAmB,IAAIC,KAAKC,aAAa,QAAS,CACtDC,MAAO,UACPC,sBAAuB,IAGzB,OACE,eAACR,EAAD,WACE,sDAAwB,cAAC,QAAD,UAAQI,EAAiBK,OAAOnB,EAAOoB,QAAQC,YAAcrB,EAAOoB,QAAQE,WAAatB,EAAOoB,QAAQC,kBAChI,2DAA6B,cAAC,QAAD,UAAQrB,EAAOoB,QAAQG,yBACpD,4DAA8B,cAAC,QAAD,UAAQvB,EAAOoB,QAAQI,wBACrD,mDAAqB,cAAC,QAAD,UAAQxB,EAAOoB,QAAQK,yBAC5C,uDAAyB,cAAC,QAAD,UAAQzB,EAAOoB,QAAQM,qBAChD,oDAAsB,cAAC,QAAD,UAAQ1B,EAAOoB,QAAQO,qBAC7C,0DAA4B,cAAC,QAAD,UAAQ3B,EAAOoB,QAAQQ,4BCTnDC,EAAkB,SAACC,GAAD,MAFkB,cAAeC,WAESA,UAAUC,UAAUC,UAAUH,IAY1FI,EAAcvB,kBAAOwB,QAAMC,KAAbzB,CAAH,sDACK,gCAAE0B,MAAF,GAAUC,EAAV,KAAiBC,EAAjB,YAAgCC,2BAAiBF,EAAOC,MAGxEE,EAAa9B,kBAAOwB,QAAMC,KAAbzB,CAAH,uGAOV+B,EAAS/B,UAAOC,IAAV,wCAQN+B,EAAa,SAAC,GAA+B,IAA9B3C,EAA6B,EAA7BA,OACZ4C,EAAOC,cAAPD,IACD3C,EAAU2C,EAAIE,MAAM,KAAKC,MAAM,GAC/BC,EAAcjD,EAAoBC,EAAQC,GAEhD,MAAI,SAAW+C,EAAYzC,KAClB,KAIP,qCACE,eAAC,aAAD,WACE,cAAC,aAAW0C,KAAZ,CAAiBC,KAAK,KAAtB,kBACCjD,EAAQkD,KAAI,SAAAC,GAAI,OACf,cAAC,aAAWH,KAAZ,CAA4BC,KAAI,WAAMN,EAAIS,UAAU,EAAGT,EAAIU,QAAQF,KAAnC,OAA4CA,GAA5E,SACGA,GADmBA,SAK1B,cAAC,EAAD,CAAapD,OAAQgD,IACrB,eAAC,QAAD,WACE,eAAC,QAAMO,OAAP,CAAcC,OAAQ,EAAtB,UACE,cAAC,QAAMC,WAAP,mBACA,cAAC,QAAMA,WAAP,+BACA,cAAC,QAAMA,WAAP,oCACA,cAAC,QAAMA,WAAP,qCACA,cAAC,QAAMA,WAAP,4BACA,cAAC,QAAMA,WAAP,gCACA,cAAC,QAAMA,WAAP,6BACA,cAAC,QAAMA,WAAP,sCAEF,cAAC,QAAMC,KAAP,UACGC,OAAOC,OAAOZ,EAAYvC,UAAU0C,KAAI,SAAAU,GACvC,IA9DcC,EA8DRC,EAAW,MAAQnB,EAAR,WAAkBiB,EAAMT,MAAxB,UAAoCR,EAApC,YAA2CiB,EAAMT,MAC5DtC,EAAmB,IAAIC,KAAKC,aAAa,QAAS,CACtDC,MAAO,UACPC,sBAAuB,IAGzB,OACE,eAAC,QAAM8C,IAAP,WACE,eAACvB,EAAD,WACG,SAAWoB,EAAMtD,KAAO,cAAC,WAAD,CAAU0D,KAAM,KAAS,cAAC,aAAD,CAAYA,KAAM,KADtE,WAEG,SAAWJ,EAAMtD,KAAOsD,EAAMT,KAAO,cAAC,IAAD,CAAMc,GAAIH,EAAV,SAAqBF,EAAMT,OACjE,cAAC,aAAD,CACEa,KAAK,QACLE,MAAM,aACN7B,MAAM,WACN8B,KAAM,cAAC,WAAD,IACNC,MAAM,oBACNC,QAAS,kBAAMzC,EAAgBgC,EAAMU,SAEvC,cAAC7B,EAAD,IACC,cAAgBmB,EAAMtD,MAAQ,cAAC,QAAD,UAAQsD,EAAMzC,QAAQE,WAAauC,EAAMzC,QAAQC,gBAElF,eAACa,EAAD,CACEG,OArFQyB,EAsFND,EAAMzC,QAAQC,YAAcwC,EAAMzC,QAAQE,WAAauC,EAAMzC,QAAQC,YArFnFyC,EAAQ,GAAY,CAAC,SAAU,IAC/BA,EAAQ,GAAY,CAAC,SAAU,IAC/BA,EAAQ,GAAY,CAAC,UAAW,IAChCA,EAAQ,IAAa,CAAC,UAAW,IACjCA,EAAQ,EAAU,CAAC,UAAW,IAE3B,CAAC,UAAW,KAiFHO,MAAK,UAAKR,EAAMzC,QAAQC,WAAnB,cAAmCwC,EAAMzC,QAAQE,WAAauC,EAAMzC,QAAQC,YAJnF,UAMGP,EAAiBK,OAChB0C,EAAMzC,QAAQC,YAAcwC,EAAMzC,QAAQE,WAAauC,EAAMzC,QAAQC,aACpE,IARL,IASIwC,EAAMzC,QAAQE,WATlB,wBAWA,cAACY,EAAD,CAAaG,MAAO,CAAC,EAAIwB,EAAMzC,QAAQG,oBAAsB,SAAW,UAAW,IAAnF,SACGsC,EAAMzC,QAAQG,sBAEjB,cAAC,QAAMa,KAAP,UAAayB,EAAMzC,QAAQI,qBAC3B,cAACU,EAAD,CAAaG,MAAO,CAAC,EAAIwB,EAAMzC,QAAQK,oBAAsB,SAAW,UAAW,IAAnF,SACGoC,EAAMzC,QAAQK,sBAEjB,cAACS,EAAD,CAAaG,MAAO,CAAC,EAAIwB,EAAMzC,QAAQM,gBAAkB,SAAW,UAAW,IAA/E,SACGmC,EAAMzC,QAAQM,kBAEjB,cAAC,QAAMU,KAAP,UAAayB,EAAMzC,QAAQO,kBAC3B,cAAC,QAAMS,KAAP,UAAayB,EAAMzC,QAAQQ,uBArCbiC,EAAMT,kBCvF9BpD,EAASwE,EAAQ,KAiBRC,EAfH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,WAAlB,SACE,cAAC,EAAD,CAAYvE,OAAQA,MAEtB,cAAC,IAAD,CAAO0E,OAAK,EAACH,KAAK,IAAlB,SACE,cAAC,EAAD,CAAYvE,OAAQA,YCPxB2E,EAAcC,4BAAH,wFAIXC,eAINC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,gBAAD,CAAeC,MAAOC,iBAAtB,UACE,cAACP,EAAD,IACA,cAAC,EAAD,SAGJQ,SAASC,eAAe,W","file":"static/js/main.ee770d06.chunk.js","sourcesContent":["type Report = {\n  directoryPath: string;\n  path: string;\n  name: string;\n  metrics: {\n    typescript: number;\n    javascript: number;\n    requireInJavascript: number;\n    requireInTypescript: number;\n    defineInJavascript: number;\n    reactClassComponent: number;\n    bemInTypescript: number;\n    reactController: number;\n    backboneController: number;\n  };\n} & (\n  | {\n  type: 'directory';\n  children: {\n    [key: string]: Report;\n  };\n}\n  | {\n  type: 'file';\n  }\n);\n\nconst getReportFromFolder = (report: Report, folders: string[]): Report => {\n  if (0 === folders.length || folders.every((folder) => folder === '')) {\n    return report;\n  }\n\n  const [currentFolder, ...otherFolders] = folders;\n  if ('file' === report.type || undefined === currentFolder) {\n    return report;\n  }\n\n  return getReportFromFolder(report.children[currentFolder], otherFolders);\n};\n\nexport {getReportFromFolder};\nexport type {Report};\n","import {Badge} from 'akeneo-design-system';\nimport {Report} from \"../model/Report\";\nimport styled from \"styled-components\";\n\nconst NodeSummaryContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  justify-content: space-between;\n`;\n\ntype NodeSummaryProps = {\n  report: Report;\n};\n\nconst NodeSummary = ({report}: NodeSummaryProps) => {\n  const percentFormatter = new Intl.NumberFormat('en-US', {\n    style: 'percent',\n    minimumFractionDigits: 2,\n  });\n\n  return (\n    <NodeSummaryContainer>\n      <span>Typescript ratio: <Badge>{percentFormatter.format(report.metrics.typescript / (report.metrics.javascript + report.metrics.typescript))}</Badge></span>\n      <span>Require in typescript: <Badge>{report.metrics.requireInTypescript}</Badge></span>\n      <span>Number of legacy files: <Badge>{report.metrics.defineInJavascript}</Badge></span>\n      <span>React classes: <Badge>{report.metrics.reactClassComponent}</Badge></span>\n      <span>BEM in typescript: <Badge>{report.metrics.bemInTypescript}</Badge></span>\n      <span>Legacy bridges: <Badge>{report.metrics.reactController}</Badge></span>\n      <span>Backbone controllers: <Badge>{report.metrics.backboneController}</Badge></span>\n    </NodeSummaryContainer>\n  );\n};\n\nexport {NodeSummary};\n","import {\n  AkeneoThemedProps,\n  Badge,\n  Breadcrumb,\n  CopyIcon,\n  FileIcon,\n  FolderIcon,\n  getColorForLevel,\n  IconButton,\n  Level,\n  Table,\n} from 'akeneo-design-system';\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {getReportFromFolder, Report} from '../model/Report';\nimport {NodeSummary} from './NodeSummary';\n\nconst canCopyToClipboard = (): boolean => 'clipboard' in navigator;\n\nconst copyToClipboard = (text: string) => canCopyToClipboard() && navigator.clipboard.writeText(text);\n\nconst getLevelForRatio = (ratio: number): [Level, number] => {\n  if (ratio < 0.4) return ['danger', 40];\n  if (ratio < 0.6) return ['danger', 20];\n  if (ratio < 0.8) return ['warning', 40];\n  if (ratio < 0.95) return ['warning', 20];\n  if (ratio < 1) return ['primary', 20];\n\n  return ['primary', 40];\n};\n\nconst ColoredCell = styled(Table.Cell)<{color: [Level, number]} & AkeneoThemedProps>`\n  background-color: ${({color: [level, gradient]}) => getColorForLevel(level, gradient)};\n`;\n\nconst SpacedCell = styled(Table.Cell)`\n  & > div {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\ntype NodeReportProps = {\n  report: Report;\n};\n\nconst NodeReport = ({report}: NodeReportProps) => {\n  const {url} = useRouteMatch();\n  const folders = url.split('/').slice(1);\n  const currentNode = getReportFromFolder(report, folders);\n\n  if ('file' === currentNode.type) {\n    return null;\n  }\n\n  return (\n    <>\n      <Breadcrumb>\n        <Breadcrumb.Step href=\"#/\">Root</Breadcrumb.Step>\n        {folders.map(name => (\n          <Breadcrumb.Step key={name} href={`#${url.substring(0, url.indexOf(name))}${name}`}>\n            {name}\n          </Breadcrumb.Step>\n        ))}\n      </Breadcrumb>\n      <NodeSummary report={currentNode} />\n      <Table>\n        <Table.Header sticky={0}>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Typescript ratio</Table.HeaderCell>\n          <Table.HeaderCell>Require in typescript</Table.HeaderCell>\n          <Table.HeaderCell>Number of legacy files</Table.HeaderCell>\n          <Table.HeaderCell>React classes</Table.HeaderCell>\n          <Table.HeaderCell>BEM in typescript</Table.HeaderCell>\n          <Table.HeaderCell>Legacy bridges</Table.HeaderCell>\n          <Table.HeaderCell>Backbone controllers</Table.HeaderCell>\n        </Table.Header>\n        <Table.Body>\n          {Object.values(currentNode.children).map(child => {\n            const childUrl = '/' === url ? `/${child.name}` : `${url}/${child.name}`;\n            const percentFormatter = new Intl.NumberFormat('en-US', {\n              style: 'percent',\n              minimumFractionDigits: 2,\n            });\n\n            return (\n              <Table.Row key={child.name}>\n                <SpacedCell>\n                  {'file' === child.type ? <FileIcon size={20} /> : <FolderIcon size={20} />}&nbsp;&nbsp;\n                  {'file' === child.type ? child.name : <Link to={childUrl}>{child.name}</Link>}\n                  <IconButton\n                    size=\"small\"\n                    ghost=\"borderless\"\n                    level=\"tertiary\"\n                    icon={<CopyIcon />}\n                    title=\"Copy to clipboard\"\n                    onClick={() => copyToClipboard(child.path)}\n                  />\n                  <Spacer />\n                  {'directory' === child.type && <Badge>{child.metrics.javascript + child.metrics.typescript}</Badge>}\n                </SpacedCell>\n                <ColoredCell\n                  color={getLevelForRatio(\n                    child.metrics.typescript / (child.metrics.javascript + child.metrics.typescript)\n                  )}\n                  title={`${child.metrics.typescript} / ${child.metrics.javascript + child.metrics.typescript}`}\n                >\n                  {percentFormatter.format(\n                    child.metrics.typescript / (child.metrics.javascript + child.metrics.typescript)\n                  )}{' '}\n                  ({child.metrics.javascript} javascript files)\n                </ColoredCell>\n                <ColoredCell color={[0 < child.metrics.requireInTypescript ? 'danger' : 'primary', 40]}>\n                  {child.metrics.requireInTypescript}\n                </ColoredCell>\n                <Table.Cell>{child.metrics.defineInJavascript}</Table.Cell>\n                <ColoredCell color={[0 < child.metrics.reactClassComponent ? 'danger' : 'primary', 40]}>\n                  {child.metrics.reactClassComponent}\n                </ColoredCell>\n                <ColoredCell color={[0 < child.metrics.bemInTypescript ? 'danger' : 'primary', 40]}>\n                  {child.metrics.bemInTypescript}\n                </ColoredCell>\n                <Table.Cell>{child.metrics.reactController}</Table.Cell>\n                <Table.Cell>{child.metrics.backboneController}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n\nexport {NodeReport};\n","import {Switch, Route, HashRouter} from 'react-router-dom';\nimport {NodeReport} from './components/NodeReport';\n\nconst report = require('./reports/report.json');\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/:path+/\">\n          <NodeReport report={report} />\n        </Route>\n        <Route exact path=\"/\">\n          <NodeReport report={report} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import {CommonStyle, onboarderTheme} from 'akeneo-design-system';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createGlobalStyle, ThemeProvider} from 'styled-components';\nimport App from './App';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 20px;\n    ${CommonStyle};\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={onboarderTheme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}