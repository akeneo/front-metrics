{"version":3,"sources":["model/Report.ts","components/ColorCell.tsx","components/NodeSummary.tsx","hooks/useSortedChildren.ts","hooks/useStorageState.ts","components/NodeReport.tsx","App.tsx","index.tsx"],"names":["getReportFromFolder","report","folders","length","every","folder","currentFolder","otherFolders","type","undefined","children","getLevelForRatio","ratio","ColoredCell","styled","Table","Cell","color","level","gradient","getColorForLevel","NodeSummaryContainer","div","ColoredIconCard","IconCard","NodeSummary","percentFormatter","Intl","NumberFormat","style","minimumFractionDigits","metrics","typescript","javascript","label","format","icon","content","typescriptLOC","javascriptLOC","requireInTypescript","toString","defineInJavascript","reactClassComponent","bemInTypescript","reactController","backboneController","useSortedChildren","defaultValue","key","storageValue","localStorage","getItem","useState","JSON","parse","value","setValue","useEffect","setItem","stringify","useStorageState","columnName","sortDirection","sortedColumn","setSortedColumn","useMemo","direction","sort","a","b","sortChildren","copyToClipboard","text","navigator","clipboard","writeText","SpacedCell","Spacer","NodeReport","url","useRouteMatch","split","slice","currentNode","Object","values","sortedChildren","computeDirection","handleDirectionChange","Step","href","map","name","substring","indexOf","Header","sticky","HeaderCell","isSortable","onDirectionChange","Body","child","childUrl","Row","size","to","ghost","title","onClick","path","require","App","exact","GlobalStyle","createGlobalStyle","CommonStyle","ReactDOM","render","StrictMode","theme","onboarderTheme","document","getElementById"],"mappings":"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","file":"static/js/main.23cf2eb8.chunk.js","sourcesContent":["type ReportMetric = {\n  typescript: number;\n  typescriptLOC: number;\n  javascript: number;\n  javascriptLOC: number;\n  requireInJavascript: number;\n  requireInTypescript: number;\n  defineInJavascript: number;\n  reactClassComponent: number;\n  bemInTypescript: number;\n  reactController: number;\n  backboneController: number;\n};\n\ntype Report = {\n  directoryPath: string;\n  path: string;\n  name: string;\n  metrics: ReportMetric;\n} & (\n  | {\n      type: 'directory';\n      children: {\n        [key: string]: Report;\n      };\n    }\n  | {\n      type: 'file';\n    }\n);\n\nconst getReportFromFolder = (report: Report, folders: string[]): Report => {\n  if (0 === folders.length || folders.every(folder => folder === '')) {\n    return report;\n  }\n\n  const [currentFolder, ...otherFolders] = folders;\n  if ('file' === report.type || undefined === currentFolder) {\n    return report;\n  }\n\n  return getReportFromFolder(report.children[currentFolder], otherFolders);\n};\n\nexport {getReportFromFolder};\nexport type {Report, ReportMetric};\n","import {Level, Table, AkeneoThemedProps, getColorForLevel} from 'akeneo-design-system';\nimport styled from 'styled-components';\n\nconst getLevelForRatio = (ratio: number): [Level, number] => {\n  if (ratio < 0.4) return ['danger', 40];\n  if (ratio < 0.6) return ['danger', 20];\n  if (ratio < 0.8) return ['warning', 40];\n  if (ratio < 0.95) return ['warning', 20];\n  if (ratio < 1) return ['primary', 20];\n\n  return ['primary', 40];\n};\n\nconst ColoredCell = styled(Table.Cell)<{color: [Level, number]} & AkeneoThemedProps>`\n  background-color: ${({color: [level, gradient]}) => getColorForLevel(level, gradient)};\n`;\n\nexport {ColoredCell, getLevelForRatio};\n","import {\n  ActivityIcon,\n  AkeneoThemedProps,\n  AssociateIcon,\n  AttributeLinkIcon,\n  ComponentIcon,\n  EntityMultiIcon,\n  FactoryIcon,\n  getColorForLevel,\n  IconCard,\n  Level,\n  RefreshIcon,\n} from 'akeneo-design-system';\nimport {Report} from '../model/Report';\nimport styled from 'styled-components';\nimport {getLevelForRatio} from './ColorCell';\n\nconst NodeSummaryContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ColoredIconCard = styled(IconCard)<{color: [Level, number]} & AkeneoThemedProps>`\n  & > div:nth-child(2) > div:nth-child(1),\n  svg {\n    color: ${({color: [level, gradient]}) => getColorForLevel(level, gradient + 40)};\n  }\n`;\n\ntype NodeSummaryProps = {\n  report: Report;\n};\n\nconst NodeSummary = ({report}: NodeSummaryProps) => {\n  const percentFormatter = new Intl.NumberFormat('en-US', {\n    style: 'percent',\n    minimumFractionDigits: 2,\n  });\n\n  return (\n    <NodeSummaryContainer>\n      <ColoredIconCard\n        color={getLevelForRatio(report.metrics.typescript / (report.metrics.javascript + report.metrics.typescript))}\n        label={percentFormatter.format(\n          report.metrics.typescript / (report.metrics.javascript + report.metrics.typescript)\n        )}\n        icon={<ActivityIcon />}\n        content=\"Typescript ratio\"\n      />\n      <ColoredIconCard\n        color={getLevelForRatio(\n          report.metrics.typescriptLOC / (report.metrics.javascriptLOC + report.metrics.typescriptLOC)\n        )}\n        label={report.metrics.requireInTypescript.toString()}\n        icon={<AttributeLinkIcon />}\n        content=\"Require in typescript\"\n      />\n      <ColoredIconCard\n        color={[0 < report.metrics.requireInTypescript ? 'danger' : 'primary', 60]}\n        label={report.metrics.defineInJavascript.toString()}\n        icon={<AssociateIcon />}\n        content=\"Number of legacy files\"\n      />\n      <ColoredIconCard\n        color={[0 < report.metrics.requireInTypescript ? 'danger' : 'primary', 60]}\n        label={report.metrics.reactClassComponent.toString()}\n        icon={<RefreshIcon />}\n        content=\"React classes\"\n      />\n      <ColoredIconCard\n        color={[0 < report.metrics.bemInTypescript ? 'danger' : 'primary', 60]}\n        label={report.metrics.bemInTypescript.toString()}\n        icon={<EntityMultiIcon />}\n        content=\"BEM in typescript\"\n      />\n      <ColoredIconCard\n        color={[0 < report.metrics.reactController ? 'danger' : 'primary', 60]}\n        label={report.metrics.reactController.toString()}\n        icon={<FactoryIcon />}\n        content=\"Legacy bridges\"\n      />\n      <ColoredIconCard\n        color={[0 < report.metrics.backboneController ? 'danger' : 'primary', 60]}\n        label={report.metrics.backboneController.toString()}\n        icon={<ComponentIcon />}\n        content=\"Backbone controllers\"\n      />\n    </NodeSummaryContainer>\n  );\n};\n\nexport {NodeSummary};\n","import {useMemo} from 'react';\nimport {Report, ReportMetric} from '../model/Report';\nimport {useStorageState} from './useStorageState';\n\ntype SortDirection = 'none' | 'ascending' | 'descending';\n\nconst useSortedChildren = (children: Report[]) => {\n  const [sortedColumn, setSortedColumn] = useStorageState<{\n    columnName: keyof ReportMetric | null;\n    sortDirection: SortDirection;\n  }>(\n    {\n      columnName: null,\n      sortDirection: 'none',\n    },\n    'sort_state'\n  );\n\n  const computeDirection = (columnName: string) => {\n    if (columnName !== sortedColumn.columnName) {\n      return 'none';\n    }\n\n    return sortedColumn.sortDirection;\n  };\n\n  const handleDirectionChange = (columnName: keyof ReportMetric) => (sortDirection: SortDirection) => {\n    setSortedColumn({\n      columnName: columnName,\n      sortDirection: sortDirection,\n    });\n  };\n\n  const sortChildren = (children: Report[], columnName: keyof ReportMetric | null, direction: SortDirection) => {\n    if (columnName === null) {\n      return children;\n    }\n\n    return [...children].sort((a, b) => {\n      return direction === 'ascending'\n        ? a.metrics[columnName] - b.metrics[columnName]\n        : b.metrics[columnName] - a.metrics[columnName];\n    });\n  };\n\n  const sortedChildren = useMemo(\n    () => sortChildren(children, sortedColumn.columnName, sortedColumn.sortDirection),\n    [sortedColumn, children]\n  );\n\n  return [sortedChildren, computeDirection, handleDirectionChange] as const;\n};\n\nexport {useSortedChildren};\n","import {useState, useEffect, SetStateAction, Dispatch} from 'react';\n\nconst useStorageState = <StateType>(\n  defaultValue: StateType,\n  key: string\n): [StateType, Dispatch<SetStateAction<StateType>>] => {\n  const storageValue = localStorage.getItem(key) as string;\n  const [value, setValue] = useState<StateType>(null !== storageValue ? JSON.parse(storageValue) : defaultValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport {useStorageState};\n","import {Badge, Breadcrumb, CopyIcon, FileIcon, FolderIcon, IconButton, Table} from 'akeneo-design-system';\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {getReportFromFolder, Report} from '../model/Report';\nimport {NodeSummary} from './NodeSummary';\nimport {ColoredCell, getLevelForRatio} from './ColorCell';\nimport {useSortedChildren} from '../hooks/useSortedChildren';\n\nconst canCopyToClipboard = (): boolean => 'clipboard' in navigator;\n\nconst copyToClipboard = (text: string) => canCopyToClipboard() && navigator.clipboard.writeText(text);\n\nconst SpacedCell = styled(Table.Cell)`\n  & > div {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\ntype NodeReportProps = {\n  report: Report;\n};\n\nconst NodeReport = ({report}: NodeReportProps) => {\n  const {url} = useRouteMatch();\n  const folders = url.split('/').slice(1);\n  const currentNode = getReportFromFolder(report, folders);\n  const [sortedChildren, computeDirection, handleDirectionChange] = useSortedChildren(\n    'file' === currentNode.type ? [] : Object.values(currentNode.children)\n  );\n\n  if ('file' === currentNode.type) {\n    return null;\n  }\n\n  return (\n    <>\n      <Breadcrumb>\n        <Breadcrumb.Step href=\"#/\">Root</Breadcrumb.Step>\n        {folders.map(name => (\n          <Breadcrumb.Step key={name} href={`#${url.substring(0, url.indexOf(name))}${name}`}>\n            {name}\n          </Breadcrumb.Step>\n        ))}\n      </Breadcrumb>\n      <NodeSummary report={currentNode} />\n      <Table>\n        <Table.Header sticky={0}>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Typescript ratio (File)</Table.HeaderCell>\n          <Table.HeaderCell>Typescript ratio (LOC)</Table.HeaderCell>\n          <Table.HeaderCell\n            isSortable={true}\n            onDirectionChange={handleDirectionChange('requireInTypescript')}\n            sortDirection={computeDirection('requireInTypescript')}\n          >\n            Require in typescript\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            isSortable={true}\n            onDirectionChange={handleDirectionChange('defineInJavascript')}\n            sortDirection={computeDirection('defineInJavascript')}\n          >\n            Number of legacy files\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            isSortable={true}\n            onDirectionChange={handleDirectionChange('reactClassComponent')}\n            sortDirection={computeDirection('reactClassComponent')}\n          >\n            React classes\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            isSortable={true}\n            onDirectionChange={handleDirectionChange('bemInTypescript')}\n            sortDirection={computeDirection('bemInTypescript')}\n          >\n            BEM in typescript\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            isSortable={true}\n            onDirectionChange={handleDirectionChange('reactController')}\n            sortDirection={computeDirection('reactController')}\n          >\n            Legacy bridges\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            isSortable={true}\n            onDirectionChange={handleDirectionChange('backboneController')}\n            sortDirection={computeDirection('backboneController')}\n          >\n            Backbone controllers\n          </Table.HeaderCell>\n        </Table.Header>\n        <Table.Body>\n          {sortedChildren.map(child => {\n            const childUrl = '/' === url ? `/${child.name}` : `${url}/${child.name}`;\n            const percentFormatter = new Intl.NumberFormat('en-US', {\n              style: 'percent',\n              minimumFractionDigits: 2,\n            });\n\n            return (\n              <Table.Row key={child.name}>\n                <SpacedCell>\n                  {'file' === child.type ? <FileIcon size={20} /> : <FolderIcon size={20} />}&nbsp;&nbsp;\n                  {'file' === child.type ? child.name : <Link to={childUrl}>{child.name}</Link>}\n                  <IconButton\n                    size=\"small\"\n                    ghost=\"borderless\"\n                    level=\"tertiary\"\n                    icon={<CopyIcon />}\n                    title=\"Copy to clipboard\"\n                    onClick={() => copyToClipboard(child.path)}\n                  />\n                  <Spacer />\n                  {'directory' === child.type && (\n                    <Badge>\n                      {child.metrics.javascriptLOC + child.metrics.typescriptLOC} |{' '}\n                      {child.metrics.javascript + child.metrics.typescript}\n                    </Badge>\n                  )}\n                </SpacedCell>\n                <ColoredCell\n                  color={getLevelForRatio(\n                    child.metrics.typescript / (child.metrics.javascript + child.metrics.typescript)\n                  )}\n                  title={`${child.metrics.typescript} / ${child.metrics.javascript + child.metrics.typescript}`}\n                >\n                  {percentFormatter.format(\n                    child.metrics.typescript / (child.metrics.javascript + child.metrics.typescript)\n                  )}{' '}\n                  ({child.metrics.javascript} javascript files)\n                </ColoredCell>\n                <ColoredCell\n                  color={getLevelForRatio(\n                    child.metrics.typescriptLOC / (child.metrics.javascriptLOC + child.metrics.typescriptLOC)\n                  )}\n                  title={`${child.metrics.typescriptLOC} / ${\n                    child.metrics.javascriptLOC + child.metrics.typescriptLOC\n                  }`}\n                >\n                  {percentFormatter.format(\n                    child.metrics.typescriptLOC / (child.metrics.javascriptLOC + child.metrics.typescriptLOC)\n                  )}{' '}\n                  ({child.metrics.javascriptLOC} javascript LOC)\n                </ColoredCell>\n                <ColoredCell color={[0 < child.metrics.requireInTypescript ? 'danger' : 'primary', 40]}>\n                  {child.metrics.requireInTypescript}\n                </ColoredCell>\n                <Table.Cell>{child.metrics.defineInJavascript}</Table.Cell>\n                <ColoredCell color={[0 < child.metrics.reactClassComponent ? 'danger' : 'primary', 40]}>\n                  {child.metrics.reactClassComponent}\n                </ColoredCell>\n                <ColoredCell color={[0 < child.metrics.bemInTypescript ? 'danger' : 'primary', 40]}>\n                  {child.metrics.bemInTypescript}\n                </ColoredCell>\n                <Table.Cell>{child.metrics.reactController}</Table.Cell>\n                <Table.Cell>{child.metrics.backboneController}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n\nexport {NodeReport};\n","import {Switch, Route, HashRouter} from 'react-router-dom';\nimport {NodeReport} from './components/NodeReport';\n\nconst report = require('./reports/report.json');\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/:path+/\">\n          <NodeReport report={report} />\n        </Route>\n        <Route exact path=\"/\">\n          <NodeReport report={report} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import {CommonStyle, onboarderTheme} from 'akeneo-design-system';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createGlobalStyle, ThemeProvider} from 'styled-components';\nimport App from './App';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 20px;\n    ${CommonStyle};\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={onboarderTheme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}